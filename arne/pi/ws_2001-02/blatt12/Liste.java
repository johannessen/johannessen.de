class Liste {    Element Kopf, Fuss;    Liste()    {        Kopf = Fuss = null;    }    Element suche (int Zahl)    {        return suche (Zahl, Kopf);    }    Element suche (int Zahl, Element e)    {        if (e == null) return null;        else if (e.Zahl == Zahl) return e;        else return suche (Zahl, e.Nf);    }    Element entnimm ()    {        Element e = Kopf;        if (Kopf == Fuss)            Kopf = Fuss = null;        else            Kopf = Kopf.Nf;        return e;    }    void durchlaufe ()    {        System.out.print ("Liste ( ");        durchlaufe (Kopf);        System.out.println (")");    }    void durchlaufe (Element e)    {        if (e != null) {            System.out.print (e.Zahl + " ");            durchlaufe (e.Nf);        }    }    void erzeuge_Kopf (int Zahl)    {        if (Kopf == null) {            Kopf = new Element (Zahl, null);            Fuss = Kopf;        }        else            Kopf = new Element (Zahl, Kopf);    }    void erzeuge_Fuss (int Zahl)    {        if (Kopf == null) {            Kopf = new Element(Zahl,null);            Fuss = Kopf;        } else {            Fuss.Nf = new Element (Zahl, null);            Fuss = Fuss.Nf;        }    }    void erzeuge_Nf (int Zahl_in_Liste, int Zahl)    {       Element e = suche (Zahl_in_Liste);       if (e != null) {            e.Nf = new Element (Zahl, e.Nf);            if (e == Fuss) Fuss = e.Nf;        }    }    void sortiere_ein (int Zahl)    {        Kopf = sortiere_ein (Zahl, Kopf);    }    Element sortiere_ein (int Zahl, Element e)    {        if (e == null)            return Fuss = new Element (Zahl, null);        else            if (Zahl < e.Zahl)                return new Element (Zahl, e);            else {                e.Nf = sortiere_ein (Zahl, e.Nf);                return e;            }    }    void entferne (int Zahl)    {        Kopf = entferne (Zahl, Kopf);    }    Element entferne (int Zahl, Element e)    {        if (e != null)            if (e.Zahl == Zahl) return e.Nf;            else {                e.Nf = entferne (Zahl, e.Nf);                return e;            }        else return null;    }    void entferne_alle ()    {        Kopf = Fuss = null;    }}